<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
   	 http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

	<context:component-scan base-package="org.tai.twitterchat.service"></context:component-scan>
	<mvc:annotation-driven />

	<jdbc:embedded-database id="dataSource" type="HSQL">
		<jdbc:script location="classpath:schema.sql" />
		<jdbc:script location="classpath:userData.sql" />
	</jdbc:embedded-database>

	<!-- Shiro filter -->
	<bean id="ShiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/chat" />
		<property name="filterChainDefinitions">
			<value>
				/home/** = authc, roles[observer]
				/login = authc
				/createRoom/** = authc, roles[admin]
				/chat/** = authc, roles[observer]
			</value>
		</property>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app. If you have multiple realms, use the 'realms' property 
			instead. -->
		<property name="realm" ref="StaticRealm" />
		<property name="cacheManager" ref="cacheManager" />
		<!-- By default the servlet container sessions will be used. Uncomment 
			this line to use shiro's native sessions (see the JavaDoc for more): -->
		<!-- <property name="sessionMode" value="native"/> -->
	</bean>
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager">
		<!--property name="cacheManager" ref="ehCacheManager" / -->
	</bean>
	
	<!-- Define the Shiro Realm implementation you want to use to connect to 
		your back-end -->
	<!-- StaticRealm: -->
	<!-- <bean id="StaticRealm" class="org.apache.shiro.realm.text.IniRealm">
		<property name="resourcePath" value="shiro.ini" />
	</bean> -->

	 <bean id="StaticRealm" class="org.tai.twitterchat.security.TwitterChatRealm"> 
		</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />


	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>